<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://trojannode.github.io/news/article-49445.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>socket.io在egg+vue中的使用</title>
        <meta name="description" content="首先说明一下什么是socket.io，它和websocket、Ajax的区别在哪里。这里就不讲理论和运行机制了（我怕误人子弟…），只说一下我的理解。（socket.io/socketIO/socket" />
        <link rel="icon" href="/assets/website/img/trojannode/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="TrojanNode免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://trojannode.github.io/news/article-49445.htm" />
    <meta property="og:site_name" content="TrojanNode免费节点官网" />
    <meta property="og:title" content="socket.io在egg+vue中的使用" />
    <meta property="og:image" content="https://trojannode.github.io/uploads/20240807/1e4df28cb641c6f51da6f20a2632a8a1.webp" />
        <meta property="og:release_date" content="2025-02-01T07:14:08" />
    <meta property="og:updated_time" content="2025-02-01T07:14:08" />
        <meta property="og:description" content="首先说明一下什么是socket.io，它和websocket、Ajax的区别在哪里。这里就不讲理论和运行机制了（我怕误人子弟…），只说一下我的理解。（socket.io/socketIO/socket" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="socket.io在egg+vue中的使用">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="/assets/website/js/frontend/trojannode/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/trojannode/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/trojannode/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/trojannode/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/trojannode/remixicon/remixicon.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/trojannode/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/trojannode/style.css" rel="stylesheet">
    
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-THYLRGLVV9"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-THYLRGLVV9');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top ">
        <div class="container d-flex align-items-center justify-content-between">
                        <a href="/"><span class="logo">Troja Nnode</span></a>
                        <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                        <li><a class="nav-link" href="#">关于</a></li>
                    <li><a class="nav-link" href="#">联系</a></li>
                </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h2>socket.io在egg+vue中的使用</h2>
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ol>
                </div>
            </div>
        </section><!-- End Breadcrumbs -->
        <!-- ======= About Section ======= -->
        <section id="about" class="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-tomorrow-night-eighties"> <p>首先说明一下什么是<code>socket.io</code>，它和<code>websocket</code>、<code>Ajax</code>的区别在哪里。这里就不讲理论和运行机制了（我怕误人子弟…），只说一下我的理解。（<code>socket.io/socketIO/socket</code>有时候称呼的很乱，我不太清楚有没有具体的区别和特殊的含义，我习惯叫<code>socket.io</code>）</p> <ol> <li><code>socket.io</code>和<code>websocket</code>：<code>websocket</code>是一种客户端和服务器之间双向实时通信技术，是<code>HTML5</code>的新协议规范。<code>websocket</code>在建立握手连接时，数据是通过HTTP协议传输的，但是在<code>TCP</code>连接建立后，真正的数据传输阶段则不需要HTTP协议的参与。它讲究是随时随地的双向通信，应用场景包括客户端需要展示动态数据等。<code>socket.io</code>则是为了兼容不同的浏览器，在<code>websocket</code>上面封装了一层。</li> <li><code>socket.io</code>和<code>Ajax</code>：<code>Ajax</code>是单向的，即客户端通过HTTP协议和服务器单向通信，流程就是客户端发出请求，服务器做出相应。<code>socket.io</code>是双向的随时随地的通信，只是用一次HTTP协议建立连接<code>TCP</code>连接后，就不在使用HTTP协议了。优点也很明显节省带宽（HTTP数据包头本身的字节量较大）和服务器资源。</li> </ol> <p>其他的详细介绍网上有很多就不在说了，网上说的千奇百怪的我就不贴网址了。下面说一下<code>socket.io</code>在<code>egg</code>+<code>vue</code>项目中的具体使用。</p> <h2><a id="egg_6" rel="nofollow"></a><code>egg</code>服务器端中使用：</h2> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://eggjs.org/zh-cn/tutorials/socketio.html"  rel="nofollow">egg-socket.io的官方文档</a> 个人觉得他说的已经很清楚了…我大概重述总结一下吧。1、安装开启插件。2、配置<code>ws</code>引擎和命名空间。3、以sticky模式启动。4、配置<code>Nginx</code>。5、写<code>soceket.io</code>的controller和相应的router文件。（它中间件项目还没用到，我就不提了，有兴趣可以去看文档）。这个过程中需要动五个文件外加<code>nginx</code>的配置文件。<br /> 0、安装：<code>$ npm i egg-socket.io --save</code><br /> 1、<code>plugin.js</code>文件：开启<code>egg-socket.io</code>。</p> <pre><code class="prism language-black">exports.io = {   enable: true,   package: 'egg-socket.io', };</code></pre> <p>2、<code>config.default.js</code>文件：配置<code>ws</code>引擎和命名空间。</p> <pre><code class="prism language-black"> exports.io = {      namespace: {      init: { wsEngine: 'uws' },  //默认是ws引擎      '/': {        connectionMiddleware: [],        packetMiddleware: [],      },    },  };</code></pre> <p>3、<code>package.json</code>文件：修改启动方式</p> <pre><code class="prism language-black">{  "scripts": {    "dev": "egg-bin dev --sticky",    "start": "egg-scripts start --sticky"  } }</code></pre> <p>4、<code>nginx</code>的配置按照文档配置就行了，就不写了。<br /> 5、<code>router.js</code>文件：配置路由。</p> <pre><code class="prism language-black">module.exports = app =&gt; {  const { router, controller } = app;  app.io.of('/').route('request', app.io.controller.socketio.index);  // namespace'/'要和配置的一致，消息名称'request'要和vue中一致 }</code></pre> <p>6、<code>io/controller/socketio.js</code>文件：具体的业务代码</p> <pre><code class="prism language-black">class SocketIOController extends Controller {  async index() {    const { ctx } = this;    const message = ctx.args[0];   //接受第一个参数：消息参数判断执行哪个函数    if (message === 'hello') {      const { param } =  ctx.args[1]  // 接受第二个参数：真正需要的参数      // ...中间是具体的业务代码      ctx.socket.emit('sendData', 'this is a response');   //消息名称'sendData'要和vue中一致，返回给客户端    }  } } module.exports = SocketIOController;</code></pre> <h2><a id="vue_60" rel="nofollow"></a><code>vue</code>客户端中使用：</h2> <p>0、安装：<code>npm install vue-socket.io --save</code><br /> 1、<code>main.js</code>文件：引入<code>vue-socket.io</code></p> <pre><code>// 引入 socketio，配置了环境变量NODE_ENV，区分开发环境用的，没用到的可忽略。 // 环境变量VUE_APP_DEV_SERVER是需要连接的服务器地址 import Vue from 'vue'; import VueSocketIO from 'vue-socket.io'; if (process.env.NODE_ENV === 'production') {   Vue.use(VueSocketIO, window.location.origin);    } else {   Vue.use(VueSocketIO, process.env.VUE_APP_DEV_SERVER);   // 等同于 Vue.use(VueSocketIO, socketio('http://xxx.xxx.xx.xxx')); }</code></pre> <p>2、组件内使用</p> <pre><code>  mounted() {      this.$options.sockets.sendData= (data) =&gt; {   // ’sendData‘是由上面egg中controller中的emit决定的        console.log(data)   //  接受到的消息输出为'this is a response'      };            this.$socket.emit('request', 'hello', { param: 'this is a param' }); // 'request' 是由egg的router决定的，后面是传给egg.controller的具体参数            if (!this.intervalData) {  // 每五秒emit一次        this.intervalData = setInterval(() =&gt; {          this.$socket.emit('request', 'hello', { param: 'this is a param' });        }, 5000);      }  },    beforeDestroy() {    delete this.$options.sockets.sendData;    if (this.intervalTime) {      clearInterval(this.intervalTime);      this.intervalTime = null;    }  },</code></pre> <p>这样说明一下可能还是不太清楚（我也是尽力表达了），可以对比下图理解：<img decoding="async" src="http://img.555519.xyz/uploads3/20220609/6c70848ccfbc1e6dc02290ceb08dbca7.jpg" alt="socket.io在egg+vue中的使用"><br /> 另外补充一点：<code>nginx</code>的配置，及时配置好了本地开发时也会有<code>cros</code>问题，但代码部署到服务器上的时候却没有<code>cros</code>问题。是因为开发时本地页面访问云服务器，chrome 浏览器作了限制。我们项目的<code>nginx</code>配置中已经add_header了，但是<code>socket.io</code> 的 response 本身也有个 Access-Control-Allow-Origin 头，add_header 后变成两个，所以就出现问题了。解决办法：修改 chrome 启动参数，在桌面上另建一个快捷方式，目标加<code>--disable-web-security --user-data-dir="C:\temp"</code>参数，开发时使用这个快捷方式启动浏览器。</p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-48955.htm">动物医院好评模板范文图片大全高清（动物医院好评模板范文图片大全高清下载）</a></p>
                                        <p>下一个：<a href="/news/article-49446.htm">动物疫苗佐剂类型（动物疫苗佐剂类型包括）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-21-node-share.htm" title="11月21日 | Trojan节点订阅每天更新20.1M/S免费节点订阅链接">11月21日 | Trojan节点订阅每天更新20.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-32296.htm" title="宠物粮食批发进货渠道有哪些地方呢视频（宠物粮食在哪里进货）">宠物粮食批发进货渠道有哪些地方呢视频（宠物粮食在哪里进货）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-8-trojan-node.htm" title="12月8日 | Trojan节点订阅每天更新19.1M/S免费节点订阅链接">12月8日 | Trojan节点订阅每天更新19.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-47452.htm" title="动物防疫疫苗与接种疫苗区别是什么意思（动物疫苗是疫苗吗）">动物防疫疫苗与接种疫苗区别是什么意思（动物疫苗是疫苗吗）</a></li>
                        <li class="py-2"><a href="/news/article-28956.htm" title="开宠物店利润大吗 现在开宠物店前景好吗">开宠物店利润大吗 现在开宠物店前景好吗</a></li>
                        <li class="py-2"><a href="/news/article-22011.htm" title="vue elementui点击按钮新增输入框">vue elementui点击按钮新增输入框</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-29-trojan-github.htm" title="12月29日 | Trojan节点订阅每天更新19.4M/S免费节点订阅链接">12月29日 | Trojan节点订阅每天更新19.4M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-2-trojan-windows.htm" title="2月2日 | Trojan节点订阅每天更新22.3M/S免费节点订阅链接">2月2日 | Trojan节点订阅每天更新22.3M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-27093.htm" title="win11系统怎么查看硬盘型号">win11系统怎么查看硬盘型号</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-31-today-trojan-node.htm" title="1月31日 | Trojan节点订阅每天更新19M/S免费节点订阅链接">1月31日 | Trojan节点订阅每天更新19M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">9</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container d-md-flex py-4">
            <div class="me-md-auto text-center text-md-start">
                <div class="copyright">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <a href="/">TrojanNode免费节点官网</a> 版权所有 Powered by WordPress
                </div>
            </div>
            <div class="social-links text-center text-md-right pt-3 pt-md-0">
                <a href="#" class="twitter"><i class="bx bxl-twitter"></i></a>
                <a href="#" class="facebook"><i class="bx bxl-facebook"></i></a>
                <a href="#" class="instagram"><i class="bx bxl-instagram"></i></a>
                <a href="#" class="google-plus"><i class="bx bxl-skype"></i></a>
                <a href="#" class="linkedin"><i class="bx bxl-linkedin"></i></a>
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/trojannode/jquery-1.9.1.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/trojannode/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/trojannode/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/trojannode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>