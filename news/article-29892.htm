<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://trojannode.github.io/news/article-29892.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>docker-compose常用命令及yml文件编写</title>
        <meta name="description" content="docker常用命令、Dockerfile、docker仓库 该篇文章最后有docker-compose的安装教程。 docker-compose是一款单机多容器编排工具，在正常使用docker的时候" />
        <link rel="icon" href="/assets/website/img/trojannode/favicon.ico" type="image/x-icon"/>
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="__ADDON__/js/frontend/trojannode/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/trojannode/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/trojannode/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/trojannode/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/trojannode/remixicon/remixicon.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/trojannode/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/trojannode/style.css" rel="stylesheet">
    
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-THYLRGLVV9"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-THYLRGLVV9');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top ">
        <div class="container d-flex align-items-center justify-content-between">
                        <a href="/"><span class="logo">Troja Nnode</span></a>
                        <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                        <li><a class="nav-link" href="#">关于</a></li>
                    <li><a class="nav-link" href="#">联系</a></li>
                </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h2>docker-compose常用命令及yml文件编写</h2>
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ol>
                </div>
            </div>
        </section><!-- End Breadcrumbs -->
        <!-- ======= About Section ======= -->
        <section id="about" class="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-light"> </h1> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/doubiy/article/details/118448421"  rel="nofollow">docker常用命令、Dockerfile、docker仓库</a> 该篇文章最后有docker-compose的安装教程。<br /> docker-compose是一款单机多容器编排工具，在正常使用docker的时候会使用很多命令，在输入这些命令的时候容易出错，而且不便记录执行了哪些命令，如果需要在其他的服务器上也部署同样的一份容器的话又要将这些命令执行一遍，服务器过多工作量也不小；这时使用docker-compose单机部署多容器就非常适用了。</p> </h1> <p><strong>docker-compose up</strong> 创建并启动容器<br /><strong>docker-compose up -d</strong> 以后台形式创建并启动容器<br /><strong>docker-compose -f yml文件 up</strong> 指定创建并启动容器使用的yml文件<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220817/6edb7df4fff2be72a4aab368ace0aa47.jpg" alt="docker-compose常用命令及yml文件编写"><br /><strong>docker-compose ps</strong>：查看通过docker-compose创建的容器，如果是docker run启动的容器不会显示，通过docker ps可以查看通过docker run和docker-compose启动的容器<br /><strong>docker-compose images</strong>：查看通过docker-compose得到的image，通过其他方式得到的image不会显示，通过docker images可以查看docker pull、docker run、docker-compose、docker build、docker commit得到的image<br /><strong>docker-compose stop/start</strong> 停止/启动docker-compose.yml文件中定义的容器<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220817/d3f92baf21b2b35d13fe9cdb3c42b64a.jpg" alt="docker-compose常用命令及yml文件编写"><br /><strong>docker-compose down</strong> 停止并删除docker-compose.yml文件中定义的容器及删除docker-compose.yml文件中定义的network，但是定义的volume不会删除。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220817/50e06a486aee204444755661ff35bf6d.jpg" alt="docker-compose常用命令及yml文件编写"><br /><strong>docker-compose logs docker-compose.yml文件中定义的容器名称</strong> 查看某个容器的日志<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220817/3b3afd0721e3899991c4f0969e712f69.jpg" alt="docker-compose常用命令及yml文件编写"><br /> 其他命令及参数可以通过<strong>docker-compose help</strong>查看<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220817/a64876a64a043cee42c137e130c8e85d.jpg" alt="docker-compose常用命令及yml文件编写"><br /><strong>注意：</strong><br /> 1、docker-compose的命令需要在有docker-compose.yml文件的目录才可以执行，否则使用docker-compose的命令会报错；并且只有该yml文件执行了up操作即创建了该docker-compose.yml定义的容器之后才可以看到对应的容器。<br /> 比如执行docker-compose ps查看通过docker-compose运行了哪些容器：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220817/f4024c1352a792c09403dfde3f20f8ef.jpg" alt="docker-compose常用命令及yml文件编写"><br /> 在没有docker-compose.yml文件的目录执行docker-compose的命令会报错，只有切换到有docker-compose.yml文件的目录方能正常执行docker-compose命令。<br /> 2、docker-compose命令，在哪个目录下执行，那么就是对于该目录下的docker-compose.yml文件的操作，比如docker-compose up就是使用当前目录的docker-compose.yml文件创建启动容器，docker-compose ps那么就是查看当前目录docker-compose.yml文件定义的容器(前提是执行了up操作才能看到定义的这些容器)。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220817/c71f8e4facb8e976ea68a7dd0ce8e033.jpg" alt="docker-compose常用命令及yml文件编写"><br /> 分别在docker1和docker两个目录执行相同的命令，查看到的结果不相同。</p> </h1> <p>version：指定版本<br /> services：该指令下面写该yml文件中需要定义的container信息，其中services的下面第一级指令就是指定的该容器的名称<br /> 如：</p> <pre><code>services:  #定义container   mysql: #container名称为mysql     image: "mysql:5.7" #image来源</code></pre> <p>image：指定该容器使用的image，和build二选一<br /> build：指定该容器使用的image通过哪个目录下的Dockerfile文件进行构建，<strong>.</strong> 表示当前目录的Dockerfile文件，和image二选一<br /> ports：指定宿主机和容器的端口映射关系，可指定多个<br /> networks：指定使用的网络信息，可指定多个<br /> ipv4_address：和networks配合使用，指定容器在该网络中的ip信息<br /> volumes：指定数据挂载信息，可以指定目录或文件的映射，也可以指定数据挂载记录和容器中目录的映射(这种一般指定的容器中目录是该容器Dockerfile文件中VOLUME指令指定的目录)，如果指定数据挂载记录的映射需要通过volumes定义数据挂载记录，可指定多个<br /> environment：指定容器可选参数的值信息<br /> networks：定义网络信息，相当于docker network create 命令，其中networks的下面第一级指令就是指定网络的名称，可以配合subnet指定网段信息<br /> volumes：定义数据挂载记录，相当于docker volume create 命令<br /> 如：</p> <pre><code>volumes:  #定义volume-相当于 docker volume create mysql   mysql: {} 或 volumes:  #定义volume-相当于 docker volume create mysql   mysql:</code></pre> <p>例如：</p> <pre><code>version: "3" #docker-compose版本 services:  #定义container   mysql: #container名称     image: "mysql:5.7" #image来源     ports:       - "3306:3306"     networks:       springboot:         ipv4_address: 172.20.0.2     volumes:       - mysql:/var/lib/mysql  #设置持久化映射关系，其中mysql是下面volumes中定义的名称为mysql的数据挂载记录名称     environment:       MYSQL_ROOT_PASSWORD: root@123456Y #设置root账号密码   sb01:   #container名称-相当于--name web     build: . #image来源，build . 表示使用当前目录的Dockerfile文件进行构建image     ports:   #指定端口映射       - "9001:9989"   #端口映射关系 和ports一起相当于-p 9001:9989     networks:  #指定network-相当于--network springboot       springboot:         ipv4_address: 172.20.0.6  #指定容器ip地址-相当于--ip 172.20.0.6   sb02:   #container名称-相当于--name web     build: . #image来源，build . 表示使用当前目录的Dockerfile文件进行构建image     ports:   #指定端口映射       - "9002:9989"   #端口映射关系 和ports一起相当于-p 9002:9989     networks:  #指定network-相当于--network springboot       springboot:         ipv4_address: 172.20.0.7   sb03:   #container名称-相当于--name web     build: . #image来源，build . 表示使用当前目录的Dockerfile文件进行构建image     ports:   #指定端口映射       - "9003:9989"   #端口映射关系 和ports一起相当于-p 9003:9989     networks:  #指定network-相当于--network springboot       springboot:         ipv4_address: 172.20.0.8   nginx:   #container名称-相当于--name web     image: nginx #image来源，build . 表示使用当前目录的Dockerfile文件进行构建image     ports:   #指定端口映射       - "80:80"   #端口映射关系 和ports一起相当于-p 80:80     networks:  #指定network-相当于--network springboot       springboot:         ipv4_address: 172.20.0.3     volumes:       - "/usr/nginx/nginx.conf:/etc/nginx/nginx.conf" #指定nginx使用的配置文件  networks:  #定义network-相当于 docker network create --subnet=172.20.0.0/24 springboot 该命令创建的network默认也是桥接模式   springboot: #network名称     driver: bridge #定义network类型为桥接模式     ipam:       driver: default       config:         - subnet: 172.20.0.0/24 #指定网段信息 volumes:  #定义volume-相当于 docker volume create mysql   mysql: {}</code></pre> <p>上面的docker-compose.yaml文件内容就是启动了三个springboot项目分别是sb01、sb02、sb03，以及一个mysql和nginx，并且指定了mysql的数据持久化映射，nginx使用的配置文件，以及这五个容器都使用名称为springboot的网络。<br /> 我这里通过docker-compose启动项目之后，访问接口效果如下：<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220817/24dad2c255892c69641caab0c9defc04.jpg" alt="docker-compose常用命令及yml文件编写"><br /><strong>注意：</strong><br /> 1、yml文件的格式层级关系是缩进两个英文状态的空格，不能用缩进符等替代空格<br /> 2、如果指令后面需要写值必须是英文冒号+英文空格方可写值，如：image: “mysql:5.7”<br /> 3、如果是可以写多个值的指令(一般这样的指令都是这个单词的复数格式，如volumes、networks、ports等)，对于这些指令的值需要冒号换行后使用 - 指定一个值，如果有多个值，使用多个 - 指定；如：</p> <pre><code>ports:   #指定端口映射   - "9003:9989"   #端口映射关系 和ports一起相当于-p 9003:9989   - "8080:8080"</code></pre> <p>4、docker-compose文件的名称只能是以下四个之一：docker-compose.yml、docker-compose.yaml、 compose.yml、compose.yaml<br /> 5、services下面定义的container的名称只能docker-compose的命令使用，docker命令无法使用该名称；docker要操作的话只能使用docker ps查看的container的名称，而这个名称的规则一般是docker-compose.yml文件所在目录的名称_docker-compose.yml文件中定义的容器名称_序号，如docker_sb01_1，其中docker是docker-compose.yml文件所在目录名称，sb01是docker-compose.yml文件中services指令下定义的container的名称，1是序号；而对应的image的名称如果该image是build得到的那么就是docker-compose.yml文件所在目录的名称_yml文件中定义的容器名称，如：docker_sb01，其中docker是docker-compose.yml文件所在目录名称，sb01是docker-compose.yml文件中services指令下定义的container的名称，如果这个image不是build而是通过image指定的话那么就是本身的image名称。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220817/6d863e318ab02881124477d92e953231.jpg" alt="docker-compose常用命令及yml文件编写"></p> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-29415.htm">开宠物店一个月能赚多少钱（开宠物店一天利润多少才能不亏）</a></p>
                                        <p>下一个：<a href="/news/article-29894.htm">女生养猫会不会得妇科病（女生养猫会得妇科病吗）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-12-4-free-node-subscribe-links.htm" title="12月4日 | Trojan节点订阅每天更新22.7M/S免费节点订阅链接">12月4日 | Trojan节点订阅每天更新22.7M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-8-12-free-high-speed-nodes.htm" title="8月12日 | Trojan节点订阅每天更新23M/S免费节点订阅链接">8月12日 | Trojan节点订阅每天更新23M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-22-free-node-subscribe.htm" title="10月22日 | Trojan节点订阅每天更新19M/S免费节点订阅链接">10月22日 | Trojan节点订阅每天更新19M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-11-latest-trojan-node.htm" title="9月11日 | Trojan节点订阅每天更新22.9M/S免费节点订阅链接">9月11日 | Trojan节点订阅每天更新22.9M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-12-trojan-node-share.htm" title="11月12日 | Trojan节点订阅每天更新22.1M/S免费节点订阅链接">11月12日 | Trojan节点订阅每天更新22.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-26626.htm" title="java 写文件 权限不够_教你解决Linux系统中JAVA创建文件后权限不足的问题">java 写文件 权限不够_教你解决Linux系统中JAVA创建文件后权限不足的问题</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-15-trojan-node.htm" title="9月15日 | Trojan节点订阅每天更新22M/S免费节点订阅链接">9月15日 | Trojan节点订阅每天更新22M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-7-free-high-speed-nodes.htm" title="12月7日 | Trojan节点订阅每天更新22.8M/S免费节点订阅链接">12月7日 | Trojan节点订阅每天更新22.8M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-22922.htm" title="从没出过门的猫走丢了能自己回家吗（从没出过门的猫走丢了能自己回家吗视频）">从没出过门的猫走丢了能自己回家吗（从没出过门的猫走丢了能自己回家吗视频）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-23-trojan-github.htm" title="12月23日 | Trojan节点订阅每天更新21.6M/S免费节点订阅链接">12月23日 | Trojan节点订阅每天更新21.6M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container d-md-flex py-4">
            <div class="me-md-auto text-center text-md-start">
                <div class="copyright">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <a href="/">TrojanNode免费节点官网</a> 版权所有 Powered by WordPress
                </div>
            </div>
            <div class="social-links text-center text-md-right pt-3 pt-md-0">
                <a href="#" class="twitter"><i class="bx bxl-twitter"></i></a>
                <a href="#" class="facebook"><i class="bx bxl-facebook"></i></a>
                <a href="#" class="instagram"><i class="bx bxl-instagram"></i></a>
                <a href="#" class="google-plus"><i class="bx bxl-skype"></i></a>
                <a href="#" class="linkedin"><i class="bx bxl-linkedin"></i></a>
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/trojannode/jquery-1.9.1.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/trojannode/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/trojannode/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/trojannode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>