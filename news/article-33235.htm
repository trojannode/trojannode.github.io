<!DOCTYPE html>
<html lang="zh-CN">

<head>
        <link rel="canonical" href="https://trojannode.github.io/news/article-33235.htm" />
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>Jpa框架下拼接原生sql 并执行</title>
        <meta name="description" content="利用jpa的entityManager 执行sql 并执行 其中： EntityManager.createNativeQuery(SQL)返回的是Object对象 entityManager.cre" />
        <link rel="icon" href="/assets/website/img/trojannode/favicon.ico" type="image/x-icon"/>
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Raleway:300,300i,400,400i,500,500i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">
    <!-- Vendor CSS Files -->
    <link href="__ADDON__/js/frontend/trojannode/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/trojannode/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/trojannode/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/trojannode/glightbox/css/glightbox.min.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/trojannode/remixicon/remixicon.css" rel="stylesheet">
    <link href="__ADDON__/js/frontend/trojannode/swiper/swiper-bundle.min.css" rel="stylesheet">
    <!-- Template Main CSS File -->
    <link href="/assets/website/css/trojannode/style.css" rel="stylesheet">
    
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-THYLRGLVV9"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-THYLRGLVV9');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ======= Header ======= -->
    <header id="header" class="fixed-top ">
        <div class="container d-flex align-items-center justify-content-between">
                        <a href="/"><span class="logo">Troja Nnode</span></a>
                        <nav id="navbar" class="navbar">
                <ul>
                                        <li><a class="nav-link" href="/">首页</a></li>
                                        <li><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                        <li><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                        <li><a class="nav-link" href="/news/">新闻资讯</a></li>
                                        <li><a class="nav-link" href="#">关于</a></li>
                    <li><a class="nav-link" href="#">联系</a></li>
                </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
            </nav><!-- .navbar -->
        </div>
    </header><!-- End Header -->
    <main id="main">
        <!-- ======= Breadcrumbs ======= -->
        <section class="breadcrumbs">
            <div class="container">
                <div class="d-flex justify-content-between align-items-center">
                    <h2>Jpa框架下拼接原生sql 并执行</h2>
                    <ol>
                        <li><a href="/">首页</a></li>
                        <li><a href="/news/">新闻资讯</a></li>
                        <li>正文</li>
                    </ol>
                </div>
            </div>
        </section><!-- End Breadcrumbs -->
        <!-- ======= About Section ======= -->
        <section id="about" class="about">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>利用jpa的entityManager 执行sql 并执行<br /> 其中：<br /> EntityManager.createNativeQuery(SQL)返回的是Object对象<br /> entityManager.createNativeQuery(SQL,WebInfo.class)返回的是映射后的实例对象</p> <p>Query.getSingleResult() 执行SQL语句，返回一个查询结果，常用的还有以下方法<br /> Query.getResultList() () 执行SQL语句，返回一个List集合<br /> Query.getFirstResult() () 执行SQL语句，返回一个系列结果集合的第一个</p> <p>直接上例子：</p> <ol> <li>EntityManager.createNativeQuery(SQL)返回的是Object对象<br /> entityManager.createNativeQuery(SQL,WebInfo.class)返回的是映射后的实例对象</li> </ol> <pre><code>  public List&lt;User&gt; getByCompanyFinanceRoleManager(Long companyID , String authorityName){         StringBuffer querySql = new StringBuffer("select a.* from art_user a , art_user_authority b where a.id = b.user_id and a.company_id = :companyId " +                 " and b.authority_name =  :authorityName");         Query query = entityManager.createNativeQuery(querySql.toString() , User.class);         query.setParameter("companyId" , companyID);         query.setParameter("authorityName" , authorityName);         List&lt;User&gt; list = query.getResultList();         return list;     }</code></pre> <ol start="2"> <li>Query.getSingleResult() 执行SQL语句，返回一个查询结果</li> </ol> <pre><code>  public Long getByFinanceRoleApplicationCount(ApplicationSearchParamDTO param){         StringBuffer queryCount = new StringBuffer("select count(er.id) from atl_application er , atl_loan_application b where er.application_oid = b.application_oid and er.status not in (1010 ,1011)");         getSql(queryCount , param);         Query count = entityManager.createNativeQuery(queryCount.toString() );         setQueryParam(count , param);         Object obj = count.getSingleResult();         Long countNum = ((BigInteger) obj).longValue();         return countNum;     }  public void getSql(StringBuffer querySql , ApplicationSearchParamDTO param ){         //公司oid         if (!StringUtils.isEmpty(param.getCompanyOID())) {             querySql.append(" and er.company_oid = :companyOID ");         }         //申请人oid         if (CollectionUtils.isNotEmpty(param.getApplicantOIDs())){             querySql.append(" and er.applicant_oid in ( :applicantOID ) ");         }         if (!StringUtils.isEmpty(param.getBusinessCode())){             querySql.append(" and b.business_code like CONCAT('%' , :businessCode , '%') ");         }         if (CollectionUtils.isNotEmpty(param.getDepartmentOIDs()) &amp;&amp; CollectionUtils.isNotEmpty(param.getFinanceRoleCorporationOids()) &amp;&amp; CollectionUtils.isEmpty(param.getCorporationOIDs())) {             querySql.append(" and ( b.department_oid in ( :departmentOID ) or er.corporation_oid in ( :corporationOID ) OR b.department_oid is null OR er.corporation_oid is null )");         }else if(CollectionUtils.isNotEmpty(param.getDepartmentOIDs()) &amp;&amp; CollectionUtils.isEmpty(param.getCorporationOIDs())){             querySql.append(" and ( b.department_oid in ( :departmentOID ) OR b.department_oid is null ) ");         }else if(CollectionUtils.isNotEmpty(param.getFinanceRoleCorporationOids()) &amp;&amp; CollectionUtils.isEmpty(param.getCorporationOIDs())){             querySql.append(" and ( er.corporation_oid in ( :corporationOID ) OR er.corporation_oid is null ) ");         }         if (CollectionUtils.isNotEmpty(param.getCorporationOIDs())){             querySql.append(" and er.corporation_oid in ( :corporationOID ) ");         }         //开始时间         if (param.getStartDate() != null) {             querySql.append(" and er.last_modified_date &gt;= :startDate ");         }         //结束时间         if (param.getEndDate() != null) {             querySql.append(" and er.last_modified_date &lt;= :endDate ");         }         //单据类型         if (CollectionUtils.isNotEmpty(param.getType())) {             querySql.append(" and er.type in ( :type ) ");         }         //单据状态         if (CollectionUtils.isNotEmpty(param.getStatus())) {             querySql.append(" and er.status in ( :status )");         }        /* //申请单oid         if (CollectionUtils.isNotEmpty(param.getApplicationOIDs())) {             querySql.append(" and er.application_oid in ( :applicationOID )");         }*/          //反选         if(CollectionUtils.isNotEmpty(param.getExcludedApplicationOIDs())){             querySql.append(" and er.application_oid not in ( :excludedApplicationOID )");         }     }</code></pre> <ol start="3"> <li>Query.getResultList()</li> </ol> <pre><code>    public List&lt;DepartmentDTO&gt; getDepartmentsOfReportLine(UUID reportLineOID) {         String sql = "SELECT d.department_oid, d.`name` FROM art_department d INNER JOIN art_report_obj ro on ro.obj_oid = d.department_oid AND ro.obj_type = '2' "             + "and ro.report_line_oid = '" + reportLineOID + "'";         Query query = entityManager.createNativeQuery(sql);         List&lt;DepartmentDTO&gt; list = new ArrayList&lt;&gt;();         List&lt;Object[]&gt; rtList = query.getResultList();         for (Object[] objects : rtList) {             DepartmentDTO departmentDTO = new DepartmentDTO();             departmentDTO.setDepartmentOID(UUID.fromString(objects[0].toString()));             departmentDTO.setName(objects[1].toString());             list.add(departmentDTO);         }         return list;     }     ```  直接参考例子，拼接正确sql 即可。   如果觉得本篇文章帮到你的话， 请关注我新建的公众号： **程序员BenJi ** 定期分享优质的知识思维导图，帮助大家建立结构化的知识体系，欢迎关注~</code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-33234.htm">taro跳转到tabBar报错问题</a></p>
                                        <p>下一个：<a href="/news/article-33715.htm">宠物粮食在哪里进货好呢知乎（宠物粮在哪里批发）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-14-free-node-subscribe-links.htm" title="11月14日 | Trojan节点订阅每天更新22.8M/S免费节点订阅链接">11月14日 | Trojan节点订阅每天更新22.8M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-28-latest-trojan-node.htm" title="12月28日 | Trojan节点订阅每天更新22.4M/S免费节点订阅链接">12月28日 | Trojan节点订阅每天更新22.4M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-21-today-trojan-node.htm" title="12月21日 | Trojan节点订阅每天更新18M/S免费节点订阅链接">12月21日 | Trojan节点订阅每天更新18M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-20-trojan-windows.htm" title="10月20日 | Trojan节点订阅每天更新22.8M/S免费节点订阅链接">10月20日 | Trojan节点订阅每天更新22.8M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-14-trojan-github.htm" title="9月14日 | Trojan节点订阅每天更新21.1M/S免费节点订阅链接">9月14日 | Trojan节点订阅每天更新21.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-33715.htm" title="宠物粮食在哪里进货好呢知乎（宠物粮在哪里批发）">宠物粮食在哪里进货好呢知乎（宠物粮在哪里批发）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-11-latest-trojan-node.htm" title="9月11日 | Trojan节点订阅每天更新22.9M/S免费节点订阅链接">9月11日 | Trojan节点订阅每天更新22.9M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-9-30-trojan-node-share.htm" title="9月30日 | Trojan节点订阅每天更新21.1M/S免费节点订阅链接">9月30日 | Trojan节点订阅每天更新21.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-7-today-trojan-node.htm" title="11月7日 | Trojan节点订阅每天更新19.6M/S免费节点订阅链接">11月7日 | Trojan节点订阅每天更新19.6M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-28490.htm" title="从源码角度分析创建线程池究竟有哪些方式">从源码角度分析创建线程池究竟有哪些方式</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">3</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">31</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-09/" title="2024-09 归档">2024-09</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-08/" title="2024-08 归档">2024-08</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section><!-- End About Section -->
    </main><!-- End #main -->
        <!-- ======= Footer ======= -->
    <footer id="footer">
        <div class="container d-md-flex py-4">
            <div class="me-md-auto text-center text-md-start">
                <div class="copyright">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <a href="/">TrojanNode免费节点官网</a> 版权所有 Powered by WordPress
                </div>
            </div>
            <div class="social-links text-center text-md-right pt-3 pt-md-0">
                <a href="#" class="twitter"><i class="bx bxl-twitter"></i></a>
                <a href="#" class="facebook"><i class="bx bxl-facebook"></i></a>
                <a href="#" class="instagram"><i class="bx bxl-instagram"></i></a>
                <a href="#" class="google-plus"><i class="bx bxl-skype"></i></a>
                <a href="#" class="linkedin"><i class="bx bxl-linkedin"></i></a>
            </div>
        </div>
    </footer><!-- End Footer -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>
    <!-- Vendor JS Files -->
    <script src="/assets/website/js/frontend/trojannode/jquery-1.9.1.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/glightbox/js/glightbox.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/isotope-layout/isotope.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/trojannode/php-email-form/validate.js"></script>
    <script src="/assets/website/js/frontend/trojannode/purecounter/purecounter.js"></script>
    <script src="/assets/website/js/frontend/trojannode/swiper/swiper-bundle.min.js"></script>
    <!-- Template Main JS File -->
    <script src="/assets/website/js/frontend/trojannode/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>